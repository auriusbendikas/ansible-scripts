---
- name: Create EFI
  command: sgdisk --zap --new=0:0:0 --typecode=0:EF00 --change-name=0:EFI --print {{ sdcard_device }}

- name: Format EFI
  command: mkfs.fat -F32 {{ sdcard_device }}1

- name: Mount EFI
  command: mount {{ sdcard_device }}1 /boot
  args:
    warn: false

- name: Encrypt device
  shell: >
    cryptsetup luksFormat {{ hdd_device }} --type luks2 --cipher=aes-xts-plain64 --key-size=512
    --use-random --header=/boot/{{ luks_header_file }} --align-payload 0 --force-password
  args:
    creates: /boot/{{ luks_header_file }}
    stdin: '{{ luks_passphrase }}'
    executable: /bin/bash

- name: Open encrypted device
  shell: >
    cryptsetup open {{ hdd_device }} root --type luks2 --allow-discards
    --header=/boot/{{ luks_header_file }}
  args:
    creates: /dev/mapper/root
    stdin: '{{ luks_passphrase }}'
    executable: /bin/bash

- name: Unmount EFI
  command: umount /boot
  args:
    warn: false

- name: Format root
  command: mkfs.ext4 /dev/mapper/root

- name: Mount root
  command: mount /dev/mapper/root /mnt
  args:
    warn: false

- name: Create boot directory
  file:
    path: /mnt/boot
    state: directory

- name: Mount EFI
  command: mount {{ sdcard_device }}1 /mnt/boot
  args:
    warn: false

- name: Install base packages
  command: pacstrap /mnt base git ansible

- name: Generate fstab
  command: genfstab -U /mnt >> /mnt/etc/fstab
  register: genfstab_output

- name: Update fstab
  blockinfile:
    path: /mnt/etc/fstab
    block: '{{ genfstab_output.stdout }}'

- name: Get ansible-scripts git repository location
  command: git rev-parse --show-toplevel
  register: git_repo_location

- name: Copy ansible-scripts git repository to same location on /mnt
  shell: |
    REPO_LOCATION={{ git_repo_location.stdout }}
    NEW_REPO_LOCATION=/mnt$(dirname $REPO_LOCATION)
    mkdir -p "$NEW_REPO_LOCATION"
    cp -R "$REPO_LOCATION" "$NEW_REPO_LOCATION"
  args:
    creates: /mnt{{ git_repo_location.stdout }}
    executable: /bin/bash
