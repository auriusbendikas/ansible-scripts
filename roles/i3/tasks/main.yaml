---
- name: Install necessary packages
  become: true
  command: >
    pacman --noconfirm --sync
    feh
    gnome-themes-extra
    gvfs
    hsetroot
    i3-wm
    i3status
    imagemagick
    light
    lightdm
    numlockx
    p7zip
    picom
    rofi
    thunar
    thunar-archive-plugin
    thunar-media-tags-plugin
    thunar-volman
    ttf-dejavu
    ttf-linux-libertine
    ttf-ubuntu-font-family
    xarchiver
    xorg-server
    xorg-xprop
    xorg-xrandr
    xorg-xrdb
    xorg-xset
  args:
    warn: false

- name: Install necessary AUR packages
  command: >
    pikaur --noconfirm --sync
    lightdm-slick-greeter
    plymouth
    roxterm

- import_tasks: lightdm-plymouth.yaml

- name: Create templated configuration direcories of the user environment
  file:
    path: '~/{{ item.path }}'
    state: directory
    mode: '{{ item.mode }}'
  with_filetree: templates/user_home
  when: item.state == 'directory'

- name: Create templated configuration direcories
  become: true
  file:
    path: '/{{ item.path }}'
    state: directory
    mode: '{{ item.mode }}'
  with_filetree: templates/
  when: item.state == 'directory' and not item.path.startswith('user_home')

- name: Create templated configurations
  become: true
  template:
    src: '{{ item.src }}'
    dest: '/{{ item.path }}'
    mode: '{{ item.mode }}'
  with_filetree: templates/
  when: item.state == 'file' and not item.path.startswith('user_home')

- name: Map Caps Lock key to XF86Terminal
  become: true
  lineinfile:
    path: /usr/share/X11/xkb/symbols/pc
    regexp: 'key <{{ item.key | regex_escape() }}>'
    insertafter: 'key <CAPS>'
    line: "    key <{{ item.key }}> {\t[ {{ item.value }}\t\t]\t};"
  loop: '{{ query("dict", lines) }}'
  vars:
    lines:
      CAPS: XF86Terminal
      AB11: XF86Terminal

- name: Configure /etc/environment for high DPI scaling
  become: true
  lineinfile:
    path: /etc/environment
    regexp: '^{{ item.key | regex_escape() }}='
    line: '{{ item.key }}={{ item.value }}'
  loop: '{{ query("dict", lines) }}'
  vars:
    lines:
      GDK_SCALE: '{{ (i3_dpi/96) | round(0, "ceil") | int }}'
      GDK_DPI_SCALE: '{{ 1 / ((i3_dpi/96) | round(0, "ceil")) }}'
      QT_AUTO_SCREEN_SCALE_FACTOR: 1
  when: i3_dpi > 96

- name: Configure rest of /etc/environment
  become: true
  lineinfile:
    path: /etc/environment
    regexp: '^{{ item.key | regex_escape() }}='
    line: '{{ item.key }}={{ item.value }}'
  loop: '{{ query("dict", lines) }}'
  vars:
    lines:
      QT_STYLE_OVERRIDE: adwaita

- name: Configure /etc/systemd/logind.conf
  become: true
  lineinfile:
    path: /etc/systemd/logind.conf
    regexp: '^#?{{ item.key | regex_escape() }}='
    line: '{{ item.key }}={{ item.value }}'
  loop: '{{ query("dict", lines) }}'
  vars:
    lines:
      KillUserProcesses: 'yes'
      HandlePowerKey: ignore
      HandleSuspendKey: suspend
      HandleHibernateKey: ignore

- name: Adding "{{ ansible_user_id }}" user to usergroup "video". This will allow "{{ ansible_user_id }}" user to control screen brigtness with "light"
  become: true
  user:
    name: '{{ ansible_user_id }}'
    groups: video
    append: true

- name: Augument global_autostart variable for autostart entry creation
  set_fact:
    global_autostart: '{{ global_autostart | default([]) + i3_autostart }}'

- name: Notify to create templated configurations of the user environment
  command: echo notify
  notify:
    - Create templated configurations of the user environment
