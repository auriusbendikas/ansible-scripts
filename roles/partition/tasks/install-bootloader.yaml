---
- name: Find root disk id
  become: true
  command: blkid -o value -s UUID {{ partition_root_alias }}
  register: partition_root_uuid

- name: Find encrypted root id
  become: true
  command: blkid -o value -s UUID {{ partition_root_device }}
  register: partition_encrypted_uuid
  when: partition_root_password is not none

- name: Find EFI disk id
  become: true
  command: blkid -o value -s UUID {{ partition_efi_device }}
  register: partition_efi_uuid

- name: Create templated configuration direcories
  become: true
  file:
    path: /mnt/{{ item.path }}
    state: directory
    mode: '{{ item.mode }}'
  with_filetree: templates/
  when: item.state == 'directory'

- name: Create templated configurations
  become: true
  template:
    src: '{{ item.path }}'
    dest: '/mnt/{{ item.path }}'
    mode:  preserve
  with_filetree: templates/
  when:
    - item.state == 'file'
    - partition_root_password or item.path != 'etc/crypttab.initramfs'

- name: Configure /etc/mkinitcpio.conf
  become: true
  lineinfile:
    path: /mnt/etc/mkinitcpio.conf
    regexp: '^{{ item.key | regex_escape() }}='
    line: '{{ item.key }}={{ item.value }}'
  loop: '{{ query("dict", lines) }}'
  vars:
    lines:
      MODULES: ({{ bootloader_video_driver }})
      HOOKS: (base systemd autodetect keyboard sd-vconsole modconf block mdadm_udev sd-encrypt filesystems fsck)

- name: Find all mkinitcpio preset files
  become: true
  find:
    paths: /mnt/etc/mkinitcpio.d
    patterns: '*.preset'
  register: partition_presets

- name: Remove all fallback presets
  become: true
  lineinfile:
    path: '{{ item.path }}'
    regexp: '^PRESETS='
    line: PRESETS=('default')
  loop: '{{ partition_presets.files }}'

- name: Delete old initrd images
  become: true
  command: rm -f /mnt/boot/*.img
  args:
    warn: false

- name: Regenerate initrd image
  become: true
  command: arch-chroot /mnt mkinitcpio --allpresets

- name: Create EFI image
  become: true
  shell: arch-chroot /mnt /usr/bin/generate-efi-image
